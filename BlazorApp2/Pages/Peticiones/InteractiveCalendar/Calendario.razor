@inject API _api;


    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" IsPill="true" Text="Selección Tipo Dia" />
    <RadzenCard Style="border:none;background-color:azure">

        <RadzenRadioButtonList @bind-Value=@valor TValue="string" @ref="radiobutton" >
            <Items>
                @foreach (var dataItem in data) {
                    <RadzenRadioButtonListItem Style=@($"background-color:{dataItem.ColorRepresentacion}") Text="@dataItem.Descripcion" Value="@dataItem.Descripcion"  />
                }
            </Items>
        </RadzenRadioButtonList>
        <br />
        <p>Multiseleccion</p>
        <RadzenSwitch @bind-Value=@Multiseleccion />
    </RadzenCard>

   



 <RadzenCard Style="border:none;background-color:transparent">
     <CascadingValue Value="@Multiseleccion" Name="Multiseleccion">
        <CascadingValue Value="@valor" Name="EstadoDiaSeleccion">
            <BlazorApp2.Pages.Peticiones.InteractiveCalendar.Calendar />
        </CascadingValue>
    </CascadingValue>
</RadzenCard>



@code{
    public IEnumerable<TipoDiaCalendarioResponse> data { get; set; } = new List<TipoDiaCalendarioResponse>();
    protected override async Task OnInitializedAsync() {
        data = await _api.GetAllTipoDiaCalendarioAsync();
        this.valor = data.First().Descripcion;
        this.radiobutton.Value = valor;
        StateHasChanged();
    }

    RadzenRadioButtonList<string> radiobutton;

    public string valor;

    public bool Multiseleccion { get; set; } 
}
