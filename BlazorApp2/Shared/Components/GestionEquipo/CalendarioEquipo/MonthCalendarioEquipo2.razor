@using BlazorApp2.Pages.Gestion.CalendarioEquipo;

    <table>
    @*Dias de la semana*@
    <tr>
        @foreach(var diaSemana in PublicVariables.WeekDays.Values)
        { 
        <th class="weekdays"> @(diaSemana)  </th>
        }
    </tr>


    @*primera semana*@
    <tr>
        @{
            int desplazamientoPrimeraSemana= PublicVariables.WeekDays.First(X => datosMes.First().Date.DayOfWeek == X.Value).Key-1;
            int i = 0;
            int totalDias = 0;
            //Desplazamiento en celdas vacias
            while (i < desplazamientoPrimeraSemana){
                <th></th>
                i++;
            }
            //Resto de dias
            while (i < 7){
                DatoDiaCalendarioEquipo variable = datosMes.ElementAt(totalDias);

                String color;
                Func<System.Drawing.Color,String> getHex= (c) =>  "#" + c.R.ToString("X2") + c.G.ToString("X2") + c.B.ToString("X2");
                if (variable.usuariosDeVacaciones == 0) color = System.Drawing.Color.LimeGreen.Name;
                else {

                    color = variable.ColorSeleccion;
                }
                 
                

                <th> 
                
                    
                        <button class="@variable.TipoDia" style="background-color:@color" disabled=@(variable.TipoDia=="Disabled")
                        @onclick="@(() => OnClickCallback.InvokeAsync(variable))" 
                        @onmouseover="@(() =>OnHover.InvokeAsync(variable))">@datosMes.ElementAt(totalDias).Date.Day </button>   
                    

                </th>         

                
                i++;
                totalDias++;
            }
        }
    </tr>
    @*resto semanas*@
        @{
            while(totalDias < datosMes.Count){
               <tr>
                @{
                    int semana = 0;

                    while (semana < 7){
                        semana++;

                        if (totalDias < datosMes.Count){
                            DatoDiaCalendarioEquipo variable = datosMes.ElementAt(totalDias);
                            String color;
                            Func<System.Drawing.Color,String> getHex= (c) =>  "#" + c.R.ToString("X2") + c.G.ToString("X2") + c.B.ToString("X2");
                            if (variable.usuariosDeVacaciones == 0) color = System.Drawing.Color.LimeGreen.Name;
                            else {
                                color = variable.ColorSeleccion;
                                //color = getHex(variable.ColorSeleccion);
                            }


                                <th>
                                   
                                    <button class="@variable.TipoDia" style="background-color:@color" disabled=@(variable.TipoDia=="Disabled")
                                    @onclick="@(() => OnClickCallback.InvokeAsync(variable))" 
                                    @onmouseover="@(() =>OnHover.InvokeAsync(variable))">@datosMes.ElementAt(totalDias).Date.Day </button>
                                    
                                </th>
                             }  
                          totalDias++;
                        } 
                    }
               </tr>
            }
        }
</table>


@code {
    [Parameter]
    public DatosDias datosMes { get; set; }
    [Parameter]
    public int Mes { get; set; }
    [Parameter]
    public EventCallback<DatoDiaCalendarioEquipo> OnClickCallback { get; set; }
    [Parameter]
    public EventCallback<DatoDiaCalendarioEquipo> OnHover { get; set; }
}