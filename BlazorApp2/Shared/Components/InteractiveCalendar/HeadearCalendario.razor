@inject Radzen.DialogService _dialogService
@inject Radzen.DialogService _dialogService


<header class="bg-dark py-5">
    <div class="text-center text-white">
        <h1 class="display-4 fw-bolder">Calendario @DateTime.Now.Year</h1>
        <p class="lead fw-normal text-white-50 mb-0">
            Calendario Anual de vacaciones
        </p>
    </div>
</header>


<div class="py-5 bg-dark">
    <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-8 justify-content-center">
        @if (this.botonesVisibles) {

            <RadzenButton Icon="warning_amber" Text="Cancelar Cambios" ButtonStyle="ButtonStyle.Danger" Click=@(async() =>{
                      bool? result = await _dialogService.Confirm("Confirmar Operación?", "Confirmación", new ConfirmOptions() { CancelButtonText = "Cancelar",OkButtonText = "Eliminar",Resizable=true});
                      if(result.HasValue && result.Value)await CancelarCambiosButtonListener.InvokeAsync();
                      }) Style="margin-right:15%;width:25%;" />
            <RadzenButton Icon="check_circle" Text="Guardar Seleccion" ButtonStyle="ButtonStyle.Success" Click=@(async() => {
                      bool? result =await _dialogService.Confirm("Confirmar Operación?", "Confirmación", new ConfirmOptions() {OkButtonText = "Guardar", CancelButtonText = "Cancelar" ,});
                      if(result.HasValue && result.Value)await SaveCalendarButtonListener.InvokeAsync();
                      }) Style="margin-left:15%;width:25%;"/>
        }
    </div>

</div>


@code {
    [Parameter]
    public EventCallback CancelarCambiosButtonListener { get; set; }
    [Parameter]
    public EventCallback SaveCalendarButtonListener { get; set; }
    [Parameter]
    public bool botonesVisibles { get; set; } = true;
}


